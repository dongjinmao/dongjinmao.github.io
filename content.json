{"meta":{"title":"董金茂的学习笔记","subtitle":"道阻且长，行则将至","description":"","author":"董金茂","url":"http://example.com","root":"/"},"pages":[{"title":"categories","date":"2023-10-14T08:48:55.000Z","updated":"2023-10-14T08:48:55.403Z","comments":true,"path":"categories/index-1.html","permalink":"http://example.com/categories/index-1.html","excerpt":"","text":""},{"title":"分类","date":"2023-10-14T08:59:56.808Z","updated":"2023-10-14T08:59:56.808Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"About","date":"2023-10-14T08:22:21.790Z","updated":"2023-10-14T08:22:21.790Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"Tags","date":"2023-10-14T08:22:21.804Z","updated":"2023-10-14T08:22:21.804Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"C语言学习","slug":"learnC","date":"2023-10-21T06:03:39.000Z","updated":"2023-10-24T10:33:54.181Z","comments":true,"path":"2023/10/21/learnC/","link":"","permalink":"http://example.com/2023/10/21/learnC/","excerpt":"","text":"C语言学习一、头文件需求：在实际的开发中，我们往往需要在不同的文件中，去调用其他文件的定义的函数，比如 hello.c 中，去使用 myfuns.c 文件中的函数，如何实现？ 头文件基本概念 头文件事扩展名为 .h 的文件，包含了C函数声明和宏定义，被多个源文件中引用共享。有两种类型的头文件：自己编写的头文件和C标准库自带的头文件。 在程序中要使用头文件，需要使用C预处理指令 #include 来引用它。比如 stdio.h 头文件。 #include 叫做文件包含命令，用来引入对应的头文件 .h文件 。 #include 也是 C语言 预处理命令 的一种。 #include 的处理过程很简单，就是将头文件的内容插入到该命令所在的位置，从而把头文件和当前源文件连接成一个源文件，这与复制粘贴的效果相同。但是我们不会直接在源文件中复制头文件的内容，因为这么做容易出错，特别在程序是由多个源文件组成的时候。 建议把所以的常量、宏、系统全局变量和函数原型写在头文件中，在需要的时候随时引用这些头文件。 工作原理使用头文件示意图 注意点：在 Visual Studio 中，C 语言文件（.c）可以调用另一个 C 语言文件中的函数，即使没有包含相应的头文件（.h）。这是因为 Visual Studio 默认会在全局符号表中包含所有编译过的源文件的符号。 当你在一个 C 语言文件中定义函数时，该函数的符号将被添加到全局符号表中。如果你在另一个 C 语言文件中调用该函数，Visual Studio 将在全局符号表中查找该函数符号，并链接到正确的函数实现。 然而，这种做法并不推荐，因为它可能导致名称冲突和其他问题。最佳实践是使用头文件来声明函数和变量，并在需要时包含相应的头文件。这样可以确保在不同源文件之间正确地共享函数和变量定义，并提高代码的可读性和可维护性。 myfuns.c 123456#include &lt;stdio.h&gt;//实现函数void sayHello() &#123; printf(&quot;hello C&quot;);&#125; myfuns.h 12//声明函数void sayHello(); hello.c 12345#include&lt;stdio.h&gt;#include &quot;myfuns.h&quot;void main() &#123; sayHello();&#125; 注意事项和细节说明 引用头文件相当于复制头文件的内容 1234#include &quot;myfuns.h&quot; 这句代码相当于将其内容复制过来 ||//声明函数void sayHello(); 源文件的名字可以不和头文件一样，但是为了好管理，一般头文件名和源文件名一样。 C语言中 **include&lt;&gt;与include””**的区别 include&lt;&gt;:","categories":[{"name":"C语言","slug":"C语言","permalink":"http://example.com/categories/C%E8%AF%AD%E8%A8%80/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2023-10-14T06:12:35.122Z","updated":"1985-10-26T08:15:00.000Z","comments":true,"path":"2023/10/14/hello-world/","link":"","permalink":"http://example.com/2023/10/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"C语言","slug":"C语言","permalink":"http://example.com/categories/C%E8%AF%AD%E8%A8%80/"}],"tags":[]}