<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>董金茂的学习笔记</title>
  
  <subtitle>道阻且长，行则将至</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-10-28T07:47:36.134Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>董金茂</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RecyclerView_ItemDecoration</title>
    <link href="http://example.com/2023/10/28/RecycleView-ItemDecoration/"/>
    <id>http://example.com/2023/10/28/RecycleView-ItemDecoration/</id>
    <published>2023-10-28T07:35:38.000Z</published>
    <updated>2023-10-28T07:47:36.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RecyclerView之ItemDecoration"><a href="#RecyclerView之ItemDecoration" class="headerlink" title="RecyclerView之ItemDecoration"></a>RecyclerView之ItemDecoration</h1><p>需求：</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href></a></li><li><a href></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RecyclerView之ItemDecoration&quot;&gt;&lt;a href=&quot;#RecyclerView之ItemDecoration&quot; class=&quot;headerlink&quot; title=&quot;RecyclerView之ItemDecoration&quot;&gt;&lt;/a&gt;Recyc</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    <category term="控件" scheme="http://example.com/categories/Android/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="recyclerView" scheme="http://example.com/categories/Android/%E6%8E%A7%E4%BB%B6/recyclerView/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言学习</title>
    <link href="http://example.com/2023/10/21/learnC/"/>
    <id>http://example.com/2023/10/21/learnC/</id>
    <published>2023-10-21T06:03:39.000Z</published>
    <updated>2023-10-26T11:49:13.129Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言学习"><a href="#C语言学习" class="headerlink" title="C语言学习"></a>C语言学习</h1><h2 id="一、头文件"><a href="#一、头文件" class="headerlink" title="一、头文件"></a>一、头文件</h2><h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><p>在实际的开发中，我们往往需要在不同的文件中，去调用其他文件的定义的函数，比如 <strong>hello.c</strong> 中，去使用 <strong>myfuns.c</strong> 文件中的函数，如何实现？</p><span id="more"></span><h3 id="头文件基本概念"><a href="#头文件基本概念" class="headerlink" title="头文件基本概念"></a>头文件基本概念</h3><ol><li>头文件事扩展名为 <strong>.h</strong> 的文件，包含了C函数声明和宏定义，被多个源文件中引用共享。有两种类型的头文件：自己编写的头文件和C标准库自带的头文件。</li><li>在程序中要使用头文件，需要使用C预处理指令 <strong>#include</strong> 来引用它。比如 <strong>stdio.h</strong> 头文件。</li><li><strong>#include</strong> 叫做文件包含命令，用来引入对应的头文件 <strong>.h文件</strong> 。   <strong>#include</strong>  也是 C语言 <strong>预处理命令</strong> 的一种。</li><li><strong>#include</strong> 的处理过程很简单，就是将头文件的内容插入到该命令所在的位置，从而把头文件和当前源文件连接成一个源文件，这与复制粘贴的效果相同。但是我们不会直接在源文件中复制头文件的内容，因为这么做容易出错，特别在程序是由多个源文件组成的时候。</li><li>建议把所以的<strong>常量</strong>、<strong>宏</strong>、<strong>系统全局变量</strong>和<strong>函数原型</strong>写在头文件中，在需要的时候随时引用这些头文件。</li></ol><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>使用头文件示意图</p><p><img src="/2023/10/21/learnC/%E4%BD%BF%E7%94%A8%E5%A4%B4%E6%96%87%E4%BB%B6%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="使用头文件示意图"></p><blockquote><p><em><strong>注意点</strong></em>：在 Visual Studio 中，C 语言文件（.c）可以调用另一个 C 语言文件中的函数，即使没有包含相应的头文件（.h）。这是因为 Visual Studio 默认会在全局符号表中包含所有编译过的源文件的符号。</p><p>当你在一个 C 语言文件中定义函数时，该函数的符号将被添加到全局符号表中。如果你在另一个 C 语言文件中调用该函数，Visual Studio 将在全局符号表中查找该函数符号，并链接到正确的函数实现。</p><p>然而，这种做法并不推荐，因为它可能导致名称冲突和其他问题。最佳实践是使用头文件来声明函数和变量，并在需要时包含相应的头文件。这样可以确保在不同源文件之间正确地共享函数和变量定义，并提高代码的可读性和可维护性。</p></blockquote><p><strong>myfuns.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//实现函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sayHello</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello C&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>myfuns.h</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sayHello</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p><strong>hello.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;myfuns.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">sayHello();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意事项和细节说明"><a href="#注意事项和细节说明" class="headerlink" title="注意事项和细节说明"></a>注意事项和细节说明</h3><ol><li><p>引用头文件相当于复制头文件的内容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;myfuns.h&quot;</span> 这句代码相当于将其内容复制过来</span></span><br><span class="line">||</span><br><span class="line"><span class="comment">//声明函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sayHello</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure></li><li><p>源文件的名字可以不和头文件一样，但是为了好管理，一般头文件名和源文件名一样。</p></li><li><p>C语言中 <strong>include&lt;&gt;</strong> 与 <strong>include””</strong> 的区别</p><ul><li>include&lt;&gt;:</li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;C语言学习&quot;&gt;&lt;a href=&quot;#C语言学习&quot; class=&quot;headerlink&quot; title=&quot;C语言学习&quot;&gt;&lt;/a&gt;C语言学习&lt;/h1&gt;&lt;h2 id=&quot;一、头文件&quot;&gt;&lt;a href=&quot;#一、头文件&quot; class=&quot;headerlink&quot; title=&quot;一、头文件&quot;&gt;&lt;/a&gt;一、头文件&lt;/h2&gt;&lt;h3 id=&quot;需求：&quot;&gt;&lt;a href=&quot;#需求：&quot; class=&quot;headerlink&quot; title=&quot;需求：&quot;&gt;&lt;/a&gt;需求：&lt;/h3&gt;&lt;p&gt;在实际的开发中，我们往往需要在不同的文件中，去调用其他文件的定义的函数，比如 &lt;strong&gt;hello.c&lt;/strong&gt; 中，去使用 &lt;strong&gt;myfuns.c&lt;/strong&gt; 文件中的函数，如何实现？&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="C语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/10/14/hello-world/"/>
    <id>http://example.com/2023/10/14/hello-world/</id>
    <published>2023-10-14T06:12:35.122Z</published>
    <updated>2023-10-26T11:51:23.078Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
